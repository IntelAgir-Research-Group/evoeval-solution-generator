Here is the optimized code for your function. It uses the built-in `enumerate` function to iterate over the list and check the condition for each element. This approach is efficient because it avoids unnecessary iterations over the list.

```python
def below_above_threshold(l: list, t1: int, t2: int, s: str):
    if s == 'below':
        for i, num in enumerate(l):
            if num >= t1:
                return i
        return True
    elif s == 'above':
        for i, num in enumerate(l):
            if num <= t2:
                return i
        return True
    else:
        return -1
```

This function works by iterating over the list `l` and checking if each number is below or above the given threshold, depending on the value of `s`. If it finds a number that violates the condition, it immediately returns the index of that number. If it doesn't find any such number, it returns `True`. If `s` is neither 'below' nor 'above', it returns `-1`.

This function is efficient because it stops as soon as it finds a number that violates the condition, so it doesn't need to check the rest of the list. It also makes good use of the server's resources by avoiding unnecessary computations.