Here is the Python code that fulfills your requirements:

```python
def next_smallest_and_largest(lst):
    if len(lst) < 2:
        return (None, None)

    smallest = float('inf')
    second_smallest = float('inf')
    largest = float('-inf')
    second_largest = float('-inf')

    for num in lst:
        if num < smallest:
            second_smallest = smallest
            smallest = num
        elif smallest < num < second_smallest:
            second_smallest = num

        if num > largest:
            second_largest = largest
            largest = num
        elif largest > num > second_largest:
            second_largest = num

    if second_smallest == float('inf'):
        second_smallest = None
    if second_largest == float('-inf'):
        second_largest = None

    return (second_smallest, second_largest)
```

This function works by maintaining four variables: `smallest`, `second_smallest`, `largest`, and `second_largest`. As it iterates through the list, it updates these variables as necessary. If it never finds a second smallest or second largest number, it returns `None` for that value. This function has a time complexity of O(n), as it only needs to iterate through the list once.