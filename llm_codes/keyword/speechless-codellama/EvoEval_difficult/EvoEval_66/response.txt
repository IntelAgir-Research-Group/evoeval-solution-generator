Here's the code that meets your requirements:

```python
def advancedDigitSum(s, t):
    sum_s = 0
    sum_t = 0
    for char in s:
        if char.isupper():
            sum_s += ord(char)
    for char in t:
        if char.islower():
            sum_t += ord(char)
    return (sum_s, sum_t)
```

This function iterates through each character in the input strings `s` and `t`. If the character is an uppercase letter in `s` or a lowercase letter in `t`, it adds the ASCII code of that character to the respective sum. Finally, it returns a tuple with the sums for `s` and `t`.

This implementation is energy-efficient because it only iterates through each character in the input strings once, and performs a constant amount of work for each character.
